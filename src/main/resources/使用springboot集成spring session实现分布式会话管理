1、引入依赖
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-data-redis</artifactId>
		</dependency>
2、如果redis安装在同一台服务器，那么这时候已经可以了，如果redis安装在不同服务器，需要另外的设置
如果你的Redis服务在远程的机器上，那么你需要在 application.properties 配置文件中配置一下 Redis的主机ip 和 端口号即可。
spring.redis.host=远程 Redis 服务主机 IP
spring.redis.port=远程 Redis

如果你的单机版Redis服务不是默认配置， 那么你需要像远程Redis服务一样进行配置其 主机ip 和端口号。

3、具体配置介绍如下：

      spring.session.store-type=redis

      设置 Spring Session 使用 Redis 进行存储。默认配置就是 redis

      spring.session.timeout=10m
      设置 Spring Session 的过期时间。如果不指定单位模式是 s。
      也可以通过在启动类上声明@EnableRedisHttpSession进行配置。
      例如：@EnableRedisHttpSession(maxInactiveIntervalInSeconds = 3600)

      spring.session.redis.flush-mode=on_save

      session刷新模式，有2中
          on_save
          保存时刷新，即响应结束后刷新。默认是 on_save
          immediate
          实时刷新

      也可以通过在启动类上声明@EnableRedisHttpSession进行配置。
      例如：@EnableRedisHttpSession(redisFlushMode = RedisFlushMode.ON_SAVE)

      spring.session.redis.namespace=redis:session

      存储 Session的命名空间，默认是spring:session。

      通过 Redis Desktop Manager 可以查看存储到Redis中的session信息的key都是以
      spring:session打头的。
      
4、确实能用，目前理解到这个层面
